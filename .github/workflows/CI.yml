# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
          - runner: ubuntu-latest
            target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenSSL
        run: sudo apt-get install -y openssl libssl-dev
      - uses: dtolnay/rust-toolchain@stable
      - name: Install build requirements
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libncursesw5-dev libssl-dev python2.7-dev python3 unzip wget \
          python3-distutils python3-setuptools python3-dev rsync subversion \
          swig time xsltproc zlib1g-dev
      # - name: Build wheels
        # uses: PyO3/maturin-action@v1
        # with:
          # target: ${{ matrix.platform.target }}
          # args: --release --out dist
          # sccache: 'true'
          # manylinux: auto
          # container: off
          # before-script-linux: sudo apt update && sudo apt install openssl libssl-dev -y && echo openssl && echo $OPENSSL_DIR && whereis openssl && export OPENSSL_DIR=/usr/bin/ 
      - name: manually    build wheels 
        run: |
          sudo apt  install -y python3-pip
          python3 -m pip  install maturin
          maturin build --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - name: Install OpenSSL
        run: sudo apt-get install -y openssl libssl-dev
      - uses: dtolnay/rust-toolchain@stable
      - name: Install build requirements
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libncursesw5-dev libssl-dev python2.7-dev python3 unzip wget \
          python3-distutils python3-setuptools python3-dev rsync subversion \
          swig time xsltproc zlib1g-dev
      # - name: Build wheels
        # uses: PyO3/maturin-action@v1
        # with:
          # target: ${{ matrix.platform.target }}
          # args: --release --out dist
          # sccache: 'true'
          # manylinux: musllinux_1_2
          # container: off
      - name: manually    build wheels 
        run: |
          sudo apt  install -y python3-pip
          python3 -m pip  install maturin
          maturin build --release --out dist
 
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install OpenSSL
        run: choco install openssl
      # - name: Build wheels
        # uses: PyO3/maturin-action@v1
        # with:
          # target: ${{ matrix.platform.target }}
          # args: --release --out dist
          # sccache: 'true'
          # container: off

      - name: manually    build wheels 
        run: |
          sudo apt  install -y python3-pip
          python3 -m pip  install maturin
          maturin build --release --out dist
 
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, musllinux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
